using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;

namespace CSharpExercises.Exercises.Regular_expressions
{
    class Program
    {
        public static void Main()
        {
            string command = Console.ReadLine();

            Regex regex = new Regex(@"(\#|\@)(?'word1'[A-Za-z]{3,})\1\1(?'word2'[A-Za-z]{3,})\1");

            MatchCollection matches = regex.Matches(command);
            int counter = 0;

            foreach (Match match in matches)
            {
                counter++;
            }
            if (counter > 0)
            {
                Console.WriteLine($"{counter} word pairs found!");
            }
            else
            {
                Console.WriteLine("No word pairs found!");
            }

            List<string> mirroredWords = new List<string>();
            foreach (Match match in matches)
            {
                string word1 = match.Groups["word1"].Value;
                string tempWord1 = word1;
                string inversedWord1 = "";

                for (int i = word1.Length - 1; i >= 0; i--)
                {
                    inversedWord1 += word1[i];
                }
                string word2 = match.Groups["word2"].Value;
                if (inversedWord1 == word2)
                {
                    string wordsToList = tempWord1 + " <=> " + word2;
                    mirroredWords.Add(wordsToList);
                }
            }
            if (!(mirroredWords.Count == 0))
            {
                Console.WriteLine("The mirror words are:");
                for (int i = 0; i < mirroredWords.Count; i++)
                {
                    if (i == mirroredWords.Count - 1)
                    {
                        Console.Write($"{mirroredWords[i]}");
                        break;
                    }
                    Console.Write($"{mirroredWords[i]}, ");
                }
            }
            else
            {
                Console.WriteLine("No mirror words!");
            }

        }
    }
}
